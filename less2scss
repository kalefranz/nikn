#!/usr/bin/env python

import argparse
import re


def convert_less_to_scss(data_str):
    """Resources:
        http://stackoverflow.com/questions/14970224/anyone-know-of-a-good-way-to-convert-from-less-to-sass
        http://wildlyinaccurate.com/converting-bootswatch-themes-to-sass
    """
    #1. replace @ with $
    data_str = re.sub(r'@([a-zA-Z0-9_-]+)', r'$\1', data_str)

    #2. replace mixins
    data_str = re.sub(r'\.([\w\-]*)\s*\((.*)\)\s*\{', r'@mixin \1\(\2\)\n{', data_str)

    #3. replace includes
    data_str = re.sub(r'\.([\w\-]*\(.*\)\s*;)', r'@include \1', data_str)

    #4. replace string literals
    data_str = re.sub(r'~"(.*)"', r'#{"\1"}', data_str)

    #5. fix media and font-face
    data_str = re.sub(r'spin\(', r'adjust-hue\(', data_str)

    #6. Sass uses 'adjust-hue' instead of 'spin'
    data_str = re.sub(r'', r'', data_str)

    return data_str


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('source', help='path to source file')
    parser.add_argument('destination',
                        help='path to destination file; '
                             'print to stdout if not given',
                        nargs='?',
                        default=None)
    args = parser.parse_args()

    with open(args.source, 'r') as f:
        data_str = f.read()

    data_str = convert_less_to_scss(data_str)

    if args.destination:
        with open(args.destination, 'w') as f:
            f.write(data_str)
    else:
        print(data_str)


if __name__ == '__main__':
    main()